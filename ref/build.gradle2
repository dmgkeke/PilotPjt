buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE")
        classpath("org.hsqldb:hsqldb:2.3.1")
        classpath("org.flywaydb:flyway-gradle-plugin:3.2.1")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '0.0.1'

jar {
	baseName = 'amplt-api-server'
    version = version

    manifest {
        attributes 'Implementation-Title': 'Anyframe Mobile API Server',
                   'Implementation-Version': version
    }
}

flyway {
    url = 'jdbc:hsqldb:file:db/file/hsqldb'
    user = 'sa'
    password = 'sa'
}

repositories {
    mavenCentral()
    maven {
        url "http://70.121.245.206:8001/nexus/content/repositories/thirdparty/"
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

ext {
    slf4jVersion = '1.7.12'
    logbackVersion = '1.1.3'
}

List loggers = [
    "org.slf4j:slf4j-api:${slf4jVersion}",
    "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
    "org.slf4j:log4j-over-slf4j:${slf4jVersion}",
    "org.slf4j:jul-to-slf4j:${slf4jVersion}",
    "ch.qos.logback:logback-core:${logbackVersion}",
    "ch.qos.logback:logback-classic:${logbackVersion}"
]

// commons-logging, log4j, jul 의존성 제거
configurations {
    all.collect { configuration ->
        configuration.exclude group: 'commons-logging', module: 'commons-logging'
        configuration.exclude group: 'log4j', module: 'log4j'
        configuration.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        configuration.exclude group: 'org.slf4j', module: 'slf4j-jcl'
        configuration.exclude group: 'org.slf4j', module: 'slf4j-jdk14'
    }
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

def distributionsCopySpec = copySpec {
    into("$name-$version") {
        into('') {
            from libsDir
            include '*.jar' //copy the fat jar created by bootRepackage
        }
        from '../amplt-api-doc/amplt-api-server/readme.md'
    }
}

task zip(type: Zip, dependsOn: bootRepackage) {
    from('build/libs') {
        include '*.jar'
    }
    from '../amplt-api-doc/amplt-api-server/readme.md'
}

task tar(type: Tar, dependsOn: bootRepackage) {
    from('build/libs') {
        include '*.jar'
    }
    from '../amplt-api-doc/amplt-api-server/readme.md'
}

build.dependsOn(zip,tar)

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}
check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencies {
    // tag::jetty[]
    compile ('org.springframework.boot:spring-boot-starter-web:1.2.7.RELEASE') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    compile ('org.springframework.boot:spring-boot-starter-jetty:1.2.7.RELEASE') {
        exclude group: 'org.eclipse.jetty.websocket'
    }
    
    compile("org.springframework.boot:spring-boot-starter-actuator:1.2.7.RELEASE")
    // end::actuator[]
    
    compile("org.springframework.boot:spring-boot-starter-data-jpa:1.2.7.RELEASE")
    
    compile("org.apache.commons:commons-lang3:3.4")
    compile("commons-pool:commons-pool:1.6")
    compile("commons-collections:commons-collections:3.2.2")
	compile('com.google.guava:guava:18.0')
	
	// spring jdbc
	compile ("org.springframework:spring-jdbc:4.1.8.RELEASE")
	
	// hsql
    compile("org.hsqldb:hsqldb:2.3.1")
    
    // flyway
    compile("org.flywaydb:flyway-core:3.2.1")
	
    // loggers
    compile loggers

    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-core:1.9.5")
    
    //rest
    testCompile("org.springframework:spring-test:4.1.8.RELEASE")
    
    testCompile ("ru.stqa.selenium:webdriver-expected-conditions:1.0.46")
    
    testCompile("org.apache.httpcomponents:httpclient:4.5.1")
    testCompile("org.hamcrest:hamcrest-library:1.3")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}
